// deepcopy-gen is a tool for auto-generating DeepCopy functions.
//
// Structs in the input directories with the below line in their comments
// will be ignored during generation.
// // +gencopy=false
package main

import (
	"strings"

	"github.com/golang/glog"

	"k8s.io/gengo/args"
	"k8s.io/gengo/examples/deepcopy-gen/generators"
	"k8s.io/gengo/generator"
)

func main() {
	arguments := args.Default()

	// Override defaults. These are Kubernetes specific input locations.
	arguments.InputDirs = []string{
		"k8s.io/kubernetes/federation/apis/federation/v1beta1",
		"k8s.io/kubernetes/federation/apis/federation",
		"k8s.io/kubernetes/pkg/api/v1",
		"k8s.io/kubernetes/pkg/api",
		"k8s.io/kubernetes/pkg/apis/abac/v1beta1",
		"k8s.io/kubernetes/pkg/apis/admission/v1alpha1",
		"k8s.io/kubernetes/pkg/apis/admission",
		"k8s.io/kubernetes/pkg/apis/admissionregistration/v1alpha1",
		"k8s.io/kubernetes/pkg/apis/admissionregistration",
		"k8s.io/kubernetes/pkg/apis/apps/v1beta1",
		"k8s.io/kubernetes/pkg/apis/apps",
		"k8s.io/kubernetes/pkg/apis/authentication/v1",
		"k8s.io/kubernetes/pkg/apis/authentication/v1beta1",
		"k8s.io/kubernetes/pkg/apis/authentication",
		"k8s.io/kubernetes/pkg/apis/authorization/v1",
		"k8s.io/kubernetes/pkg/apis/authorization/v1beta1",
		"k8s.io/kubernetes/pkg/apis/authorization",
		"k8s.io/kubernetes/pkg/apis/autoscaling/v1",
		"k8s.io/kubernetes/pkg/apis/autoscaling/v2alpha1",
		"k8s.io/kubernetes/pkg/apis/autoscaling",
		"k8s.io/kubernetes/pkg/apis/batch/v1",
		"k8s.io/kubernetes/pkg/apis/batch/v2alpha1",
		"k8s.io/kubernetes/pkg/apis/batch",
		"k8s.io/kubernetes/pkg/apis/certificates/v1beta1",
		"k8s.io/kubernetes/pkg/apis/certificates",
		"k8s.io/kubernetes/pkg/apis/componentconfig/v1alpha1",
		"k8s.io/kubernetes/pkg/apis/componentconfig",
		"k8s.io/kubernetes/pkg/apis/extensions/v1beta1",
		"k8s.io/kubernetes/pkg/apis/extensions",
		"k8s.io/kubernetes/pkg/apis/imagepolicy/v1alpha1",
		"k8s.io/kubernetes/pkg/apis/imagepolicy",
		"k8s.io/kubernetes/pkg/apis/networking/v1",
		"k8s.io/kubernetes/pkg/apis/networking",
		"k8s.io/kubernetes/pkg/apis/policy/v1beta1",
		"k8s.io/kubernetes/pkg/apis/policy",
		"k8s.io/kubernetes/pkg/apis/rbac/v1alpha1",
		"k8s.io/kubernetes/pkg/apis/rbac/v1beta1",
		"k8s.io/kubernetes/pkg/apis/rbac",
		"k8s.io/kubernetes/pkg/apis/settings/v1alpha1",
		"k8s.io/kubernetes/pkg/apis/settings",
		"k8s.io/kubernetes/pkg/apis/storage/v1",
		"k8s.io/kubernetes/pkg/apis/storage/v1beta1",
		"k8s.io/kubernetes/pkg/apis/storage",
		"k8s.io/kubernetes/plugin/pkg/admission/podtolerationrestriction/apis/podtolerationrestriction/v1alpha1",
		"k8s.io/kubernetes/plugin/pkg/admission/podtolerationrestriction/apis/podtolerationrestriction",
		"k8s.io/kubernetes/plugin/pkg/admission/resourcequota/apis/resourcequota/v1alpha1",
		"k8s.io/kubernetes/plugin/pkg/admission/resourcequota/apis/resourcequota",

		"k8s.io/apimachinery/pkg/apis/meta/v1",
		"k8s.io/apimachinery/pkg/apis/meta/v1alpha1",
		"k8s.io/apimachinery/pkg/runtime",

		"k8s.io/kube-aggregator/pkg/apis/apiregistration/v1beta1",
		"k8s.io/kube-aggregator/pkg/apis/apiregistration",
		
		"github.com/openshift/origin/pkg/authorization/apis/authorization/v1",
		"github.com/openshift/origin/pkg/authorization/apis/authorization",
		"github.com/openshift/origin/pkg/build/apis/build/v1",
		"github.com/openshift/origin/pkg/build/apis/build",
		"github.com/openshift/origin/pkg/deploy/apis/apps/v1",
		"github.com/openshift/origin/pkg/deploy/apis/apps",
		"github.com/openshift/origin/pkg/image/apis/image/v1",
		"github.com/openshift/origin/pkg/image/apis/image",
		"github.com/openshift/origin/pkg/oauth/apis/oauth/v1",
		"github.com/openshift/origin/pkg/oauth/apis/oauth",
		"github.com/openshift/origin/pkg/project/apis/project/v1",
		"github.com/openshift/origin/pkg/project/apis/project",
		"github.com/openshift/origin/pkg/quota/apis/quota/v1",
		"github.com/openshift/origin/pkg/quota/apis/quota",
		"github.com/openshift/origin/pkg/route/apis/route/v1",
		"github.com/openshift/origin/pkg/route/apis/route",
		"github.com/openshift/origin/pkg/sdn/apis/network/v1",
		"github.com/openshift/origin/pkg/sdn/apis/network",
		"github.com/openshift/origin/pkg/template/apis/template/v1",
		"github.com/openshift/origin/pkg/template/apis/template",
		"github.com/openshift/origin/pkg/user/apis/user/v1",
		"github.com/openshift/origin/pkg/user/apis/user",
		"github.com/openshift/origin/pkg/security/apis/security/v1",
		"github.com/openshift/origin/pkg/security/apis/security",
	}

	arguments.GeneratedBuildTag = "ignore_autogenerated_openshift"
	arguments.GoHeaderFilePath = "hack/boilerplate.txt"
	arguments.OutputFileBaseName = "zz_generated.deepcopy"
	arguments.CustomArgs = &generators.CustomArgs{
		BoundingDirs: []string{
			"k8s.io/kubernetes",
			"github.com/openshift/origin",
		},
	}

	if err := arguments.Execute(
		generators.NameSystems(),
		generators.DefaultNameSystem(),
		func(context *generator.Context, arguments *args.GeneratorArgs) generator.Packages {
			pkgs := generators.Packages(context, arguments)
			var include generator.Packages
			for _, pkg := range pkgs {
				if strings.HasPrefix(pkg.Path(), "k8s.io/") {
					continue
				}
				include = append(include, pkg)
			}
			return include
		},
	); err != nil {
		glog.Fatalf("Error: %v", err)
	}
	glog.Info("Completed successfully.")
}

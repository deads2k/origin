// +build !ignore_autogenerated_openshift

// This file was autogenerated by deepcopy-gen. Do not edit it manually!

package image

import (
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	api "k8s.io/kubernetes/pkg/api"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Descriptor) DeepCopyInto(out *Descriptor) {
	*out = *in
	return
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, creating a new Descriptor.
func (x *Descriptor) DeepCopy() *Descriptor {
	if x == nil {
		return nil
	}
	out := new(Descriptor)
	x.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerConfig) DeepCopyInto(out *DockerConfig) {
	*out = *in
	if in.PortSpecs != nil {
		in, out := &in.PortSpecs, &out.PortSpecs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ExposedPorts != nil {
		in, out := &in.ExposedPorts, &out.ExposedPorts
		*out = make(map[string]struct{}, len(*in))
		for key := range *in {
			(*out)[key] = struct{}{}
		}
	}
	if in.Env != nil {
		in, out := &in.Env, &out.Env
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Cmd != nil {
		in, out := &in.Cmd, &out.Cmd
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DNS != nil {
		in, out := &in.DNS, &out.DNS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make(map[string]struct{}, len(*in))
		for key := range *in {
			(*out)[key] = struct{}{}
		}
	}
	if in.Entrypoint != nil {
		in, out := &in.Entrypoint, &out.Entrypoint
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.SecurityOpts != nil {
		in, out := &in.SecurityOpts, &out.SecurityOpts
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.OnBuild != nil {
		in, out := &in.OnBuild, &out.OnBuild
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	return
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, creating a new DockerConfig.
func (x *DockerConfig) DeepCopy() *DockerConfig {
	if x == nil {
		return nil
	}
	out := new(DockerConfig)
	x.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerConfigHistory) DeepCopyInto(out *DockerConfigHistory) {
	*out = *in
	out.Created = in.Created.DeepCopy()
	return
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, creating a new DockerConfigHistory.
func (x *DockerConfigHistory) DeepCopy() *DockerConfigHistory {
	if x == nil {
		return nil
	}
	out := new(DockerConfigHistory)
	x.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerConfigRootFS) DeepCopyInto(out *DockerConfigRootFS) {
	*out = *in
	if in.DiffIDs != nil {
		in, out := &in.DiffIDs, &out.DiffIDs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, creating a new DockerConfigRootFS.
func (x *DockerConfigRootFS) DeepCopy() *DockerConfigRootFS {
	if x == nil {
		return nil
	}
	out := new(DockerConfigRootFS)
	x.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerFSLayer) DeepCopyInto(out *DockerFSLayer) {
	*out = *in
	return
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, creating a new DockerFSLayer.
func (x *DockerFSLayer) DeepCopy() *DockerFSLayer {
	if x == nil {
		return nil
	}
	out := new(DockerFSLayer)
	x.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerHistory) DeepCopyInto(out *DockerHistory) {
	*out = *in
	return
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, creating a new DockerHistory.
func (x *DockerHistory) DeepCopy() *DockerHistory {
	if x == nil {
		return nil
	}
	out := new(DockerHistory)
	x.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerImage) DeepCopyInto(out *DockerImage) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.Created = in.Created.DeepCopy()
	in.ContainerConfig.DeepCopyInto(&out.ContainerConfig)
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		if *in == nil {
			*out = nil
		} else {
			*out = new(DockerConfig)
			(*in).DeepCopyInto(*out)
		}
	}
	return
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, creating a new DockerImage.
func (x *DockerImage) DeepCopy() *DockerImage {
	if x == nil {
		return nil
	}
	out := new(DockerImage)
	x.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerImageConfig) DeepCopyInto(out *DockerImageConfig) {
	*out = *in
	out.Created = in.Created.DeepCopy()
	in.ContainerConfig.DeepCopyInto(&out.ContainerConfig)
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		if *in == nil {
			*out = nil
		} else {
			*out = new(DockerConfig)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.RootFS != nil {
		in, out := &in.RootFS, &out.RootFS
		if *in == nil {
			*out = nil
		} else {
			*out = new(DockerConfigRootFS)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.History != nil {
		in, out := &in.History, &out.History
		*out = make([]DockerConfigHistory, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OSFeatures != nil {
		in, out := &in.OSFeatures, &out.OSFeatures
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, creating a new DockerImageConfig.
func (x *DockerImageConfig) DeepCopy() *DockerImageConfig {
	if x == nil {
		return nil
	}
	out := new(DockerImageConfig)
	x.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerImageManifest) DeepCopyInto(out *DockerImageManifest) {
	*out = *in
	if in.FSLayers != nil {
		in, out := &in.FSLayers, &out.FSLayers
		*out = make([]DockerFSLayer, len(*in))
		copy(*out, *in)
	}
	if in.History != nil {
		in, out := &in.History, &out.History
		*out = make([]DockerHistory, len(*in))
		copy(*out, *in)
	}
	if in.Layers != nil {
		in, out := &in.Layers, &out.Layers
		*out = make([]Descriptor, len(*in))
		copy(*out, *in)
	}
	out.Config = in.Config
	return
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, creating a new DockerImageManifest.
func (x *DockerImageManifest) DeepCopy() *DockerImageManifest {
	if x == nil {
		return nil
	}
	out := new(DockerImageManifest)
	x.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerImageReference) DeepCopyInto(out *DockerImageReference) {
	*out = *in
	return
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, creating a new DockerImageReference.
func (x *DockerImageReference) DeepCopy() *DockerImageReference {
	if x == nil {
		return nil
	}
	out := new(DockerImageReference)
	x.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerV1CompatibilityImage) DeepCopyInto(out *DockerV1CompatibilityImage) {
	*out = *in
	out.Created = in.Created.DeepCopy()
	in.ContainerConfig.DeepCopyInto(&out.ContainerConfig)
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		if *in == nil {
			*out = nil
		} else {
			*out = new(DockerConfig)
			(*in).DeepCopyInto(*out)
		}
	}
	return
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, creating a new DockerV1CompatibilityImage.
func (x *DockerV1CompatibilityImage) DeepCopy() *DockerV1CompatibilityImage {
	if x == nil {
		return nil
	}
	out := new(DockerV1CompatibilityImage)
	x.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerV1CompatibilityImageSize) DeepCopyInto(out *DockerV1CompatibilityImageSize) {
	*out = *in
	return
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, creating a new DockerV1CompatibilityImageSize.
func (x *DockerV1CompatibilityImageSize) DeepCopy() *DockerV1CompatibilityImageSize {
	if x == nil {
		return nil
	}
	out := new(DockerV1CompatibilityImageSize)
	x.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Image) DeepCopyInto(out *Image) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.DockerImageMetadata.DeepCopyInto(&out.DockerImageMetadata)
	if in.DockerImageLayers != nil {
		in, out := &in.DockerImageLayers, &out.DockerImageLayers
		*out = make([]ImageLayer, len(*in))
		copy(*out, *in)
	}
	if in.Signatures != nil {
		in, out := &in.Signatures, &out.Signatures
		*out = make([]ImageSignature, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DockerImageSignatures != nil {
		in, out := &in.DockerImageSignatures, &out.DockerImageSignatures
		*out = make([][]byte, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = make([]byte, len(*in))
				copy(*out, *in)
			}
		}
	}
	return
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, creating a new Image.
func (x *Image) DeepCopy() *Image {
	if x == nil {
		return nil
	}
	out := new(Image)
	x.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageImportSpec) DeepCopyInto(out *ImageImportSpec) {
	*out = *in
	out.From = in.From
	if in.To != nil {
		in, out := &in.To, &out.To
		if *in == nil {
			*out = nil
		} else {
			*out = new(api.LocalObjectReference)
			**out = **in
		}
	}
	out.ImportPolicy = in.ImportPolicy
	out.ReferencePolicy = in.ReferencePolicy
	return
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, creating a new ImageImportSpec.
func (x *ImageImportSpec) DeepCopy() *ImageImportSpec {
	if x == nil {
		return nil
	}
	out := new(ImageImportSpec)
	x.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageImportStatus) DeepCopyInto(out *ImageImportStatus) {
	*out = *in
	in.Status.DeepCopyInto(&out.Status)
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		if *in == nil {
			*out = nil
		} else {
			*out = new(Image)
			(*in).DeepCopyInto(*out)
		}
	}
	return
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, creating a new ImageImportStatus.
func (x *ImageImportStatus) DeepCopy() *ImageImportStatus {
	if x == nil {
		return nil
	}
	out := new(ImageImportStatus)
	x.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageLayer) DeepCopyInto(out *ImageLayer) {
	*out = *in
	return
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, creating a new ImageLayer.
func (x *ImageLayer) DeepCopy() *ImageLayer {
	if x == nil {
		return nil
	}
	out := new(ImageLayer)
	x.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageList) DeepCopyInto(out *ImageList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Image, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, creating a new ImageList.
func (x *ImageList) DeepCopy() *ImageList {
	if x == nil {
		return nil
	}
	out := new(ImageList)
	x.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageLookupPolicy) DeepCopyInto(out *ImageLookupPolicy) {
	*out = *in
	return
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, creating a new ImageLookupPolicy.
func (x *ImageLookupPolicy) DeepCopy() *ImageLookupPolicy {
	if x == nil {
		return nil
	}
	out := new(ImageLookupPolicy)
	x.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageSignature) DeepCopyInto(out *ImageSignature) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = make([]byte, len(*in))
		copy(*out, *in)
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]SignatureCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SignedClaims != nil {
		in, out := &in.SignedClaims, &out.SignedClaims
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Created != nil {
		in, out := &in.Created, &out.Created
		if *in == nil {
			*out = nil
		} else {
			*out = new(v1.Time)
			**out = (*in).DeepCopy()
		}
	}
	if in.IssuedBy != nil {
		in, out := &in.IssuedBy, &out.IssuedBy
		if *in == nil {
			*out = nil
		} else {
			*out = new(SignatureIssuer)
			**out = **in
		}
	}
	if in.IssuedTo != nil {
		in, out := &in.IssuedTo, &out.IssuedTo
		if *in == nil {
			*out = nil
		} else {
			*out = new(SignatureSubject)
			**out = **in
		}
	}
	return
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, creating a new ImageSignature.
func (x *ImageSignature) DeepCopy() *ImageSignature {
	if x == nil {
		return nil
	}
	out := new(ImageSignature)
	x.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageStream) DeepCopyInto(out *ImageStream) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, creating a new ImageStream.
func (x *ImageStream) DeepCopy() *ImageStream {
	if x == nil {
		return nil
	}
	out := new(ImageStream)
	x.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageStreamImage) DeepCopyInto(out *ImageStreamImage) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Image.DeepCopyInto(&out.Image)
	return
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, creating a new ImageStreamImage.
func (x *ImageStreamImage) DeepCopy() *ImageStreamImage {
	if x == nil {
		return nil
	}
	out := new(ImageStreamImage)
	x.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageStreamImport) DeepCopyInto(out *ImageStreamImport) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, creating a new ImageStreamImport.
func (x *ImageStreamImport) DeepCopy() *ImageStreamImport {
	if x == nil {
		return nil
	}
	out := new(ImageStreamImport)
	x.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageStreamImportSpec) DeepCopyInto(out *ImageStreamImportSpec) {
	*out = *in
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		if *in == nil {
			*out = nil
		} else {
			*out = new(RepositoryImportSpec)
			**out = **in
		}
	}
	if in.Images != nil {
		in, out := &in.Images, &out.Images
		*out = make([]ImageImportSpec, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, creating a new ImageStreamImportSpec.
func (x *ImageStreamImportSpec) DeepCopy() *ImageStreamImportSpec {
	if x == nil {
		return nil
	}
	out := new(ImageStreamImportSpec)
	x.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageStreamImportStatus) DeepCopyInto(out *ImageStreamImportStatus) {
	*out = *in
	if in.Import != nil {
		in, out := &in.Import, &out.Import
		if *in == nil {
			*out = nil
		} else {
			*out = new(ImageStream)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		if *in == nil {
			*out = nil
		} else {
			*out = new(RepositoryImportStatus)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.Images != nil {
		in, out := &in.Images, &out.Images
		*out = make([]ImageImportStatus, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, creating a new ImageStreamImportStatus.
func (x *ImageStreamImportStatus) DeepCopy() *ImageStreamImportStatus {
	if x == nil {
		return nil
	}
	out := new(ImageStreamImportStatus)
	x.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageStreamList) DeepCopyInto(out *ImageStreamList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ImageStream, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, creating a new ImageStreamList.
func (x *ImageStreamList) DeepCopy() *ImageStreamList {
	if x == nil {
		return nil
	}
	out := new(ImageStreamList)
	x.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageStreamMapping) DeepCopyInto(out *ImageStreamMapping) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Image.DeepCopyInto(&out.Image)
	return
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, creating a new ImageStreamMapping.
func (x *ImageStreamMapping) DeepCopy() *ImageStreamMapping {
	if x == nil {
		return nil
	}
	out := new(ImageStreamMapping)
	x.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageStreamSpec) DeepCopyInto(out *ImageStreamSpec) {
	*out = *in
	out.LookupPolicy = in.LookupPolicy
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]TagReference, len(*in))
		for key, val := range *in {
			newVal := new(TagReference)
			val.DeepCopyInto(newVal)
			(*out)[key] = *newVal
		}
	}
	return
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, creating a new ImageStreamSpec.
func (x *ImageStreamSpec) DeepCopy() *ImageStreamSpec {
	if x == nil {
		return nil
	}
	out := new(ImageStreamSpec)
	x.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageStreamStatus) DeepCopyInto(out *ImageStreamStatus) {
	*out = *in
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]TagEventList, len(*in))
		for key, val := range *in {
			newVal := new(TagEventList)
			val.DeepCopyInto(newVal)
			(*out)[key] = *newVal
		}
	}
	return
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, creating a new ImageStreamStatus.
func (x *ImageStreamStatus) DeepCopy() *ImageStreamStatus {
	if x == nil {
		return nil
	}
	out := new(ImageStreamStatus)
	x.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageStreamTag) DeepCopyInto(out *ImageStreamTag) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		if *in == nil {
			*out = nil
		} else {
			*out = new(TagReference)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]TagEventCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	out.LookupPolicy = in.LookupPolicy
	in.Image.DeepCopyInto(&out.Image)
	return
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, creating a new ImageStreamTag.
func (x *ImageStreamTag) DeepCopy() *ImageStreamTag {
	if x == nil {
		return nil
	}
	out := new(ImageStreamTag)
	x.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageStreamTagList) DeepCopyInto(out *ImageStreamTagList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ImageStreamTag, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, creating a new ImageStreamTagList.
func (x *ImageStreamTagList) DeepCopy() *ImageStreamTagList {
	if x == nil {
		return nil
	}
	out := new(ImageStreamTagList)
	x.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryImportSpec) DeepCopyInto(out *RepositoryImportSpec) {
	*out = *in
	out.From = in.From
	out.ImportPolicy = in.ImportPolicy
	out.ReferencePolicy = in.ReferencePolicy
	return
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryImportSpec.
func (x *RepositoryImportSpec) DeepCopy() *RepositoryImportSpec {
	if x == nil {
		return nil
	}
	out := new(RepositoryImportSpec)
	x.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryImportStatus) DeepCopyInto(out *RepositoryImportStatus) {
	*out = *in
	in.Status.DeepCopyInto(&out.Status)
	if in.Images != nil {
		in, out := &in.Images, &out.Images
		*out = make([]ImageImportStatus, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AdditionalTags != nil {
		in, out := &in.AdditionalTags, &out.AdditionalTags
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryImportStatus.
func (x *RepositoryImportStatus) DeepCopy() *RepositoryImportStatus {
	if x == nil {
		return nil
	}
	out := new(RepositoryImportStatus)
	x.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SignatureCondition) DeepCopyInto(out *SignatureCondition) {
	*out = *in
	out.LastProbeTime = in.LastProbeTime.DeepCopy()
	out.LastTransitionTime = in.LastTransitionTime.DeepCopy()
	return
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, creating a new SignatureCondition.
func (x *SignatureCondition) DeepCopy() *SignatureCondition {
	if x == nil {
		return nil
	}
	out := new(SignatureCondition)
	x.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SignatureGenericEntity) DeepCopyInto(out *SignatureGenericEntity) {
	*out = *in
	return
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, creating a new SignatureGenericEntity.
func (x *SignatureGenericEntity) DeepCopy() *SignatureGenericEntity {
	if x == nil {
		return nil
	}
	out := new(SignatureGenericEntity)
	x.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SignatureIssuer) DeepCopyInto(out *SignatureIssuer) {
	*out = *in
	out.SignatureGenericEntity = in.SignatureGenericEntity
	return
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, creating a new SignatureIssuer.
func (x *SignatureIssuer) DeepCopy() *SignatureIssuer {
	if x == nil {
		return nil
	}
	out := new(SignatureIssuer)
	x.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SignatureSubject) DeepCopyInto(out *SignatureSubject) {
	*out = *in
	out.SignatureGenericEntity = in.SignatureGenericEntity
	return
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, creating a new SignatureSubject.
func (x *SignatureSubject) DeepCopy() *SignatureSubject {
	if x == nil {
		return nil
	}
	out := new(SignatureSubject)
	x.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagEvent) DeepCopyInto(out *TagEvent) {
	*out = *in
	out.Created = in.Created.DeepCopy()
	return
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, creating a new TagEvent.
func (x *TagEvent) DeepCopy() *TagEvent {
	if x == nil {
		return nil
	}
	out := new(TagEvent)
	x.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagEventCondition) DeepCopyInto(out *TagEventCondition) {
	*out = *in
	out.LastTransitionTime = in.LastTransitionTime.DeepCopy()
	return
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, creating a new TagEventCondition.
func (x *TagEventCondition) DeepCopy() *TagEventCondition {
	if x == nil {
		return nil
	}
	out := new(TagEventCondition)
	x.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagEventList) DeepCopyInto(out *TagEventList) {
	*out = *in
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TagEvent, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]TagEventCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, creating a new TagEventList.
func (x *TagEventList) DeepCopy() *TagEventList {
	if x == nil {
		return nil
	}
	out := new(TagEventList)
	x.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagImportPolicy) DeepCopyInto(out *TagImportPolicy) {
	*out = *in
	return
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, creating a new TagImportPolicy.
func (x *TagImportPolicy) DeepCopy() *TagImportPolicy {
	if x == nil {
		return nil
	}
	out := new(TagImportPolicy)
	x.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagReference) DeepCopyInto(out *TagReference) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.From != nil {
		in, out := &in.From, &out.From
		if *in == nil {
			*out = nil
		} else {
			*out = new(api.ObjectReference)
			**out = **in
		}
	}
	if in.Generation != nil {
		in, out := &in.Generation, &out.Generation
		if *in == nil {
			*out = nil
		} else {
			*out = new(int64)
			**out = **in
		}
	}
	out.ImportPolicy = in.ImportPolicy
	out.ReferencePolicy = in.ReferencePolicy
	return
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, creating a new TagReference.
func (x *TagReference) DeepCopy() *TagReference {
	if x == nil {
		return nil
	}
	out := new(TagReference)
	x.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagReferencePolicy) DeepCopyInto(out *TagReferencePolicy) {
	*out = *in
	return
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, creating a new TagReferencePolicy.
func (x *TagReferencePolicy) DeepCopy() *TagReferencePolicy {
	if x == nil {
		return nil
	}
	out := new(TagReferencePolicy)
	x.DeepCopyInto(out)
	return out
}
